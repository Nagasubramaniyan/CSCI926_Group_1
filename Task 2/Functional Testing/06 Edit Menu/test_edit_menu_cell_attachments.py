from selenium.webdriver.common.by import By
from selenium.webdriver.support.select import Select
from src.testproject.classes import DriverStepSettings, StepSettings
from src.testproject.decorator import report_assertion_errors
from src.testproject.enums import SleepTimingType
from src.testproject.sdk.drivers import webdriver
import pytest


"""
This pytest test was automatically generated by TestProject
    Project: Jupyter Notebook Functional Test
    Package: EditMenuCellAttachments
    Test: Edit Menu - Cell Attachments
    Generated by: Jianpeng Chen (jc107@uowmail.edu.au)
    Generated on 04/27/2021, 06:39:49
"""


@pytest.fixture()
def driver():
    driver = webdriver.Chrome(token="fk3yOvlRsLLpCaaggFfMO8vEplPSx8qsdrnNiqcDOgM",
                              project_name="Jupyter Notebook Functional Test",
                              job_name="Edit Menu - Cell Attachments")
    step_settings = StepSettings(timeout=15000,
                                 sleep_time=500,
                                 sleep_timing_type=SleepTimingType.Before)
    with DriverStepSettings(driver, step_settings):
        yield driver
    driver.quit()


@report_assertion_errors
def test_main(driver):
    # Test Parameters
    # Auto generated application URL parameter
    ApplicationURL = "http://localhost:8888/tree"

    # 1. Navigate to '{ApplicationURL}'
    # Navigates the specified URL (Auto-generated)
    driver.get(f'{ApplicationURL}')

    # 2. Click 'functional test folder'
    functional_test_folder = driver.find_element(By.XPATH,
                                                 "//span[. = 'functional test folder']")
    functional_test_folder.click()

    # 3. Click 'test_editor_01.ipynb1'
    test_editor_01_ipynb1 = driver.find_element(By.XPATH,
                                                "//span[. = 'test_editor_01.ipynb']")
    test_editor_01_ipynb1.click()

    # 4. Click 'I5'
    i5 = driver.find_element(By.XPATH,
                             "//div[2]/button/i")
    i5.click()

    # 5. Click 'cell_type'
    cell_type = driver.find_element(By.CSS_SELECTOR,
                                    "#cell_type")
    cell_type.click()

    # 6. Select the 'markdown' option in 'cell_type'
    cell_type = driver.find_element(By.CSS_SELECTOR,
                                    "#cell_type")
    Select(cell_type).select_by_value("markdown")

    # 7. Click '​1'
    _1 = driver.find_element(By.XPATH,
                             "//pre[. = '​']")
    _1.click()

    # 8. Click 'Edit1'
    edit1 = driver.find_element(By.CSS_SELECTOR,
                                "#editlink")
    edit1.click()

    # 9. Click 'Cut Cell Attachments'
    cut_cell_attachments = driver.find_element(By.XPATH,
                                               "//a[. = 'Cut Cell Attachments']")
    cut_cell_attachments.click()

    # 10. Click 'Edit1'
    edit1 = driver.find_element(By.CSS_SELECTOR,
                                "#editlink")
    edit1.click()

    # 11. Click 'Paste Cell Attachments'
    paste_cell_attachments = driver.find_element(By.XPATH,
                                                 "//a[. = 'Paste Cell Attachments']")
    paste_cell_attachments.click()

    # 12. Click 'IMG'
    img = driver.find_element(By.XPATH,
                              "//p/img")
    img.click()

    # 13. Click 'cell_type'
    cell_type = driver.find_element(By.CSS_SELECTOR,
                                    "#cell_type")
    cell_type.click()

    # 14. Select the 'markdown' option in 'cell_type'
    cell_type = driver.find_element(By.CSS_SELECTOR,
                                    "#cell_type")
    Select(cell_type).select_by_value("markdown")

    # 15. Click 'IMG'
    img = driver.find_element(By.XPATH,
                              "//p/img")
    img.click()

    # 16. Click 'Edit1'
    edit1 = driver.find_element(By.CSS_SELECTOR,
                                "#editlink")
    edit1.click()

    # 17. Click 'Copy Cell Attachments'
    copy_cell_attachments = driver.find_element(By.XPATH,
                                                "//a[. = 'Copy Cell Attachments']")
    copy_cell_attachments.click()

    # 18. Click '​2'
    _2 = driver.find_element(By.XPATH,
                             "//pre[. = '​']")
    _2.click()

    # 19. Click 'Edit1'
    edit1 = driver.find_element(By.CSS_SELECTOR,
                                "#editlink")
    edit1.click()

    # 20. Click 'Paste Cell Attachments'
    paste_cell_attachments = driver.find_element(By.XPATH,
                                                 "//a[. = 'Paste Cell Attachments']")
    paste_cell_attachments.click()

    # 21. Click '​1'
    _1 = driver.find_element(By.XPATH,
                             "//pre[. = '​']")
    _1.click()

    # 22. Click 'Edit1'
    edit1 = driver.find_element(By.CSS_SELECTOR,
                                "#editlink")
    edit1.click()

    # 23. Click 'Edit1'
    edit1 = driver.find_element(By.CSS_SELECTOR,
                                "#editlink")
    edit1.click()

    # 24. Click 'Delete CellsD,D'
    delete_cellsd_d = driver.find_element(By.XPATH,
                                          "//a[. = 'Delete CellsD,D']")
    delete_cellsd_d.click()

    # 25. Click 'P'
    p = driver.find_element(By.XPATH,
                            "//div[3]/p")
    p.click()

    # 26. Click 'Edit1'
    edit1 = driver.find_element(By.CSS_SELECTOR,
                                "#editlink")
    edit1.click()

    # 27. Click 'Delete Cells'
    delete_cells = driver.find_element(By.XPATH,
                                       "//span[. = 'Delete Cells']")
    delete_cells.click()

    # 28. Click 'Edit1'
    edit1 = driver.find_element(By.CSS_SELECTOR,
                                "#editlink")
    edit1.click()

    # 29. Click 'Cut Cell Attachments'
    cut_cell_attachments = driver.find_element(By.XPATH,
                                               "//a[. = 'Cut Cell Attachments']")
    cut_cell_attachments.click()

    # 30. Click 'Edit1'
    edit1 = driver.find_element(By.CSS_SELECTOR,
                                "#editlink")
    edit1.click()

    # 31. Click 'Paste Cell Attachments'
    paste_cell_attachments = driver.find_element(By.XPATH,
                                                 "//a[. = 'Paste Cell Attachments']")
    paste_cell_attachments.click()

    # 32. Click 'insert cell below'
    insert_cell_below = driver.find_element(By.XPATH,
                                            "//div[2]/button")
    insert_cell_below.click()

    # 33. Click 'cell_type'
    cell_type = driver.find_element(By.CSS_SELECTOR,
                                    "#cell_type")
    cell_type.click()

    # 34. Select the 'markdown' option in 'cell_type'
    cell_type = driver.find_element(By.CSS_SELECTOR,
                                    "#cell_type")
    Select(cell_type).select_by_value("markdown")

    # 35. Click 'Edit1'
    edit1 = driver.find_element(By.CSS_SELECTOR,
                                "#editlink")
    edit1.click()

    # 36. Click 'Copy Cell Attachments'
    copy_cell_attachments = driver.find_element(By.XPATH,
                                                "//a[. = 'Copy Cell Attachments']")
    copy_cell_attachments.click()

    # 37. Click 'Edit1'
    edit1 = driver.find_element(By.CSS_SELECTOR,
                                "#editlink")
    edit1.click()

    # 38. Click 'Paste Cell Attachments'
    paste_cell_attachments = driver.find_element(By.XPATH,
                                                 "//a[. = 'Paste Cell Attachments']")
    paste_cell_attachments.click()

    # 39. Click 'Edit1'
    edit1 = driver.find_element(By.CSS_SELECTOR,
                                "#editlink")
    edit1.click()

    # 40. Click 'Edit1'
    edit1 = driver.find_element(By.CSS_SELECTOR,
                                "#editlink")
    edit1.click()
